version: "3.7"
services:
  prestashop:
    depends_on:
      - mariadb
    image: prestashop/prestashop:1.7
    links:
      - mariadb:mariadb
    networks:
      - backend
      - frontend
    restart: on-failure
    volumes:
      - ./prestashop/html:/var/www/html/:delegated
      - ./prestashop/vendor:/var/www/html/vendor
      - ./prestashop/var:/var/www/html/var
    environment:
      - DB_SERVER=mariadb
      - DB_USER=${DBUSER}
      - DB_PASSWD=${DBPASSWORD}
      - DB_NAME=${DBNAME}
      - PS_INSTALL_AUTO=1
      - PS_LANGUAGE=pl
      - PS_DEV_MODE=1
      - PS_COUNTRY=PL
      - DB_PREFIX=ps
      - PS_FOLDER_ADMIN=admin182
      - PS_HANDLE_DYNAMIC_DOMAIN=1
      - PS_DOMAIN=localhost
      - ADMIN_MAIL=${ADMINNAME}
      - ADMIN_PASSWD=${ADMINPASSWD}
      - PS_ERASE_DB=0

  mariadb:
    image: mariadb:10.1
    environment:
      - MYSQL_ROOT_PASSWORD=${SQLROOTPASSWORD}
      - MYSQL_DATABASE=${DBNAME}
      - MYSQL_USER=${DBUSER}
      - MYSQL_PASSWORD=${DBPASSWORD}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ./mariadb:/var/lib/mysql
      - ./configs/config.cfg:/etc/mysql/conf.d/custom.cnf

  phpmyadmin:
    links:
      - mariadb:mariadb
    image: phpmyadmin/phpmyadmin
    restart: on-failure
    environment:
      - PMA_HOST=mariadb
      - MYSQL_ROOT_PASSWORD=${SQLROOTPASSWORD}
    networks:
      - backend
      - frontend

  nginx:
    image: nginx:1.15-alpine
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - frontend
    links:
      - prestashop
      - phpmyadmin
    depends_on:
      - certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge
